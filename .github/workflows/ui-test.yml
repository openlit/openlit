name: Test OpenLIT

on:
  pull_request_target:
    branches: [main]
    paths:
      - 'src/**'

jobs:
  check_version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    
    - name: Fetch main branch
      run: git fetch origin main

    - name: Set up jq
      run: sudo apt-get install -y jq
    
    - name: Check if version was updated in package.json
      id: check_version
      run: |
        current_version=$(jq -r '.version' src/client/package.json)
        main_version=$(git show origin/main:src/client/package.json | jq -r '.version')
        echo "Current branch version: $current_version"
        echo "Main branch version: $main_version"
        
        if [ "$current_version" = "$main_version" ]; then
          echo "Version in package.json was not updated. Please update the version." >&2
          exit 1
        else
          echo "Version in package.json was updated."
        fi

  build:
    runs-on: ubuntu-latest
    needs: check_version

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Start Docker Compose
      run: docker compose -f src/dev-docker-compose.yml up --build -d

    - name: Wait for container to be running
      run: |
        echo "Waiting for the OpenLIT container to be running..."
        while [ "$(docker inspect -f '{{.State.Running}}' openlit)" != "true" ]; do
          if [ "$(docker inspect -f '{{.State.Running}}' openlit)" == "false" ]; then
            echo "OpenLIT container failed to run, exiting..."
            exit 1
          fi
          sleep 5
        done
        echo "OpenLIT container is running."

    - name: Post Docker logs in case of failure
      if: failure()
      run: docker logs openlit

    - name: Clean up Docker
      if: always()
      run: docker compose -f src/dev-docker-compose.yml down
